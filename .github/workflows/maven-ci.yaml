name: Maven CI Pipeline

on:
  workflow_dispatch:

env:
  MAVEN_OPTS: -Dfile.encoding=UTF-8

jobs:
  # Build and Test Job
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [8, 11, 17, 21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Validate POM
      run: mvn validate
      
    - name: Compile
      run: mvn compile
      
    - name: Run tests
      run: mvn test
      
    - name: Run integration tests
      run: mvn verify -DskipUnitTests
      
    - name: Build JAR
      run: mvn package -DskipTests
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.java-version }}
        path: target/surefire-reports/
        retention-days: 30
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports-${{ matrix.java-version }}
        path: target/site/jacoco/
        retention-days: 30

  # Code Quality Job
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Run SonarQube analysis
      run: |
        mvn clean verify sonar:sonar \
          -Dsonar.projectKey=your-project-key \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Run SpotBugs
      run: mvn spotbugs:check
      
    - name: Run Checkstyle
      run: mvn checkstyle:check

  # Security Scan Job
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Setup Veracode
      uses: veracode/veracode-security-scan@v1
      with:
        veracode_id: ${{ secrets.VERACODE_ID }}
        veracode_key: ${{ secrets.VERACODE_KEY }}
        
    - name: Run Veracode Static Analysis
      run: |
        # Run Veracode static analysis
        veracode static-scan --build-name "maven-app-${{ github.run_number }}" --build-id "${{ github.run_number }}"
        
    - name: Run Veracode Software Composition Analysis
      run: |
        # Run Veracode SCA for dependency scanning
        veracode sca-scan --build-name "maven-app-${{ github.run_number }}" --build-id "${{ github.run_number }}"
        
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: veracode-security-report
        path: veracode-results/
        retention-days: 90

  # Build Artifact Job
  build-artifact:
    name: Build Artifact
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Build artifact
      run: mvn clean package -DskipTests
      
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: maven-artifact
        path: target/*.jar
        retention-days: 30 