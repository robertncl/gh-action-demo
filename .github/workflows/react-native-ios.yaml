name: React Native iOS Build

on:
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  RUBY_VERSION: '3.2'

jobs:
  # Setup and Dependencies
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Node.js dependencies
      run: npm ci
      
    - name: Cache iOS dependencies
      uses: actions/cache@v4
      with:
        path: |
          ios/Pods
          ~/.cocoapods
        key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

  # Lint and Test
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript check
      run: npm run type-check
      
    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false
      
    - name: Setup Veracode
      uses: veracode/veracode-security-scan@v1
      with:
        veracode_id: ${{ secrets.VERACODE_ID }}
        veracode_key: ${{ secrets.VERACODE_KEY }}
        
    - name: Run Veracode Static Analysis
      run: |
        # Run Veracode static analysis
        veracode static-scan --build-name "react-native-ios-${{ github.run_number }}" --build-id "${{ github.run_number }}"
        
    - name: Run Veracode Software Composition Analysis
      run: |
        # Run Veracode SCA for dependency scanning
        veracode sca-scan --build-name "react-native-ios-${{ github.run_number }}" --build-id "${{ github.run_number }}"
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: coverage/
        retention-days: 30

  # iOS Build and Test
  ios-build:
    name: iOS Build and Test
    runs-on: macos-latest
    needs: setup
    
    strategy:
      matrix:
        xcode-version: ['15.0', '14.3']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Node.js dependencies
      run: npm ci
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
        
    - name: Install iOS dependencies
      run: |
        cd ios
        pod install --repo-update
        
    - name: Cache iOS dependencies
      uses: actions/cache@v4
      with:
        path: |
          ios/Pods
          ~/.cocoapods
        key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
          
    - name: Build iOS app
      run: |
        cd ios
        xcodebuild -workspace YourApp.xcworkspace \
          -scheme YourApp \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -derivedDataPath build \
          build
          
    - name: Run iOS tests
      run: |
        cd ios
        xcodebuild -workspace YourApp.xcworkspace \
          -scheme YourApp \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -derivedDataPath build \
          test
          
    - name: Upload iOS build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-${{ matrix.xcode-version }}
        path: ios/build/
        retention-days: 30

  # iOS Archive (for App Store)
  ios-archive:
    name: iOS Archive
    runs-on: macos-latest
    needs: [setup, lint-and-test, ios-build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Node.js dependencies
      run: npm ci
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
        
    - name: Install iOS dependencies
      run: |
        cd ios
        pod install --repo-update
        
    - name: Setup code signing
      uses: apple-actions/import-codesigning-certs@v1
      with:
        p12-file-base64: ${{ secrets.IOS_P12_BASE64 }}
        p12-password: ${{ secrets.IOS_P12_PASSWORD }}
        
    - name: Setup provisioning profile
      uses: apple-actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.yourapp.bundleid'
        profile-type: 'IOS_APP_STORE'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        
    - name: Archive iOS app
      run: |
        cd ios
        xcodebuild -workspace YourApp.xcworkspace \
          -scheme YourApp \
          -configuration Release \
          -archivePath build/YourApp.xcarchive \
          archive
          
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
          -archivePath build/YourApp.xcarchive \
          -exportPath build/ \
          -exportOptionsPlist exportOptions.plist
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa
        path: ios/build/*.ipa
        retention-days: 30

  # Upload to TestFlight
  upload-testflight:
    name: Upload to TestFlight
    runs-on: macos-latest
    needs: ios-archive
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download IPA artifact
      uses: actions/download-artifact@v4
      with:
        name: ios-ipa
        path: ./
        
    - name: Upload to TestFlight
      uses: apple-actions/upload-testflight@v1
      with:
        app-path: '*.ipa'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }} 