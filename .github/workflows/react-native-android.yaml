name: React Native Android Build

on:
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  # Setup and Dependencies
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Node.js dependencies
      run: npm ci

  # Lint and Test
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript check
      run: npm run type-check
      
    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false
      
    - name: Setup Veracode
      uses: veracode/veracode-security-scan@v1
      with:
        veracode_id: ${{ secrets.VERACODE_ID }}
        veracode_key: ${{ secrets.VERACODE_KEY }}
        
    - name: Run Veracode Static Analysis
      run: |
        # Run Veracode static analysis
        veracode static-scan --build-name "react-native-android-${{ github.run_number }}" --build-id "${{ github.run_number }}"
        
    - name: Run Veracode Software Composition Analysis
      run: |
        # Run Veracode SCA for dependency scanning
        veracode sca-scan --build-name "react-native-android-${{ github.run_number }}" --build-id "${{ github.run_number }}"
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: coverage/
        retention-days: 30

  # Android Build and Test
  android-build:
    name: Android Build and Test
    runs-on: ubuntu-latest
    needs: setup
    
    strategy:
      matrix:
        api-level: [21, 24, 29, 33]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Node.js dependencies
      run: npm ci
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ matrix.api-level }}
        build-tools: '33.0.0'
        platform: 'android-33'
        
    - name: Cache Android dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make Gradlew Executable
      run: chmod +x android/gradlew
      
    - name: Build Android app (Debug)
      run: |
        cd android
        ./gradlew assembleDebug
        ./gradlew assembleRelease
          
    - name: Run Android tests
      run: |
        cd android
        ./gradlew test
        ./gradlew connectedAndroidTest
          
    - name: Upload Android build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-build-${{ matrix.api-level }}
        path: |
          android/app/build/outputs/apk/debug/
          android/app/build/outputs/apk/release/
        retention-days: 30

  # Android Bundle (for Play Store)
  android-bundle:
    name: Android Bundle
    runs-on: ubuntu-latest
    needs: [setup, lint-and-test, android-build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Node.js dependencies
      run: npm ci
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: '33'
        build-tools: '33.0.0'
        platform: 'android-33'
        
    - name: Cache Android dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make Gradlew Executable
      run: chmod +x android/gradlew
      
    - name: Setup signing config
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
        echo "storeFile=keystore.jks" > android/app/signing.properties
        echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/app/signing.properties
        echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/app/signing.properties
        echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/app/signing.properties
      
    - name: Build Android Bundle
      run: |
        cd android
        ./gradlew bundleRelease
          
    - name: Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-bundle
        path: android/app/build/outputs/bundle/release/
        retention-days: 30

  # Upload to Play Store
  upload-playstore:
    name: Upload to Play Store
    runs-on: ubuntu-latest
    needs: android-bundle
    
    steps:
    - name: Download AAB artifact
      uses: actions/download-artifact@v4
      with:
        name: android-bundle
        path: ./
        
    - name: Upload to Play Store
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
        packageName: com.yourapp.package
        releaseFiles: app-release.aab
        track: internal
        status: completed 